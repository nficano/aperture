name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

jobs:
  ci:
    name: Lint, Test, Coverage (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: bun install

      - name: Lint
        run: bun run lint

      - name: Test
        run: bun run test

      - name: Coverage
        run: bun run test:coverage

      - name: Upload coverage artifact
        if: matrix.node == '20'
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      # write a transient .npmrc that reads the token from secrets
      - name: Configure npm auth
        run: |
          cat > .npmrc <<'RC'
          registry=https://registry.npmjs.org/
          always-auth=true
          //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          RC

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: |
          # publish scoped package as public using npm
          npm publish --access public
